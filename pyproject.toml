[project]
name = "arc"
version = "0.1.0"
description = "Probably the most important thing I'll ever build - a system to send encrypted letters to my daughters."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "cryptography>=44.0.2",
    "google-api-python-client>=2.165.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.1",
    "pycryptodome>=3.22.0",
    "pytest>=8.3.5",
    "python-dotenv>=1.0.1",
]

[project.optional-dependencies]
dev = [
    "black>=24.2.0",
    "ruff>=0.3.0",
    "mypy>=1.9.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]

[project.scripts]
arc = "arc.cli.commands:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/arc"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
target-version = "py312"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []

[tool.ruff.isort]
known-first-party = ["arc"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
# addopts = "--cov=arc --cov-report=term-missing --cov-report=html --cov-branch"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.coverage.run]
branch = true
source = ["arc"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
show_missing = true
fail_under = 80
